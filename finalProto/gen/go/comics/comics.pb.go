// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: comics/comics.proto

package comicsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chapter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Number        int32                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	mi := &file_comics_comics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{0}
}

func (x *Chapter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chapter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chapter) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Chapter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Chapter) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Comic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Chapters      []*Chapter             `protobuf:"bytes,5,rep,name=chapters,proto3" json:"chapters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comic) Reset() {
	*x = Comic{}
	mi := &file_comics_comics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comic) ProtoMessage() {}

func (x *Comic) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comic.ProtoReflect.Descriptor instead.
func (*Comic) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{1}
}

func (x *Comic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Comic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Comic) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Comic) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type CreateComicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateComicRequest) Reset() {
	*x = CreateComicRequest{}
	mi := &file_comics_comics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComicRequest) ProtoMessage() {}

func (x *CreateComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComicRequest.ProtoReflect.Descriptor instead.
func (*CreateComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{2}
}

func (x *CreateComicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateComicRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateComicRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateComicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateComicResponse) Reset() {
	*x = CreateComicResponse{}
	mi := &file_comics_comics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateComicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComicResponse) ProtoMessage() {}

func (x *CreateComicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComicResponse.ProtoReflect.Descriptor instead.
func (*CreateComicResponse) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{3}
}

func (x *CreateComicResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetComicByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetComicByIDRequest) Reset() {
	*x = GetComicByIDRequest{}
	mi := &file_comics_comics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetComicByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComicByIDRequest) ProtoMessage() {}

func (x *GetComicByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComicByIDRequest.ProtoReflect.Descriptor instead.
func (*GetComicByIDRequest) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{4}
}

func (x *GetComicByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ComicList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comics        []*Comic               `protobuf:"bytes,1,rep,name=comics,proto3" json:"comics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComicList) Reset() {
	*x = ComicList{}
	mi := &file_comics_comics_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComicList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComicList) ProtoMessage() {}

func (x *ComicList) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComicList.ProtoReflect.Descriptor instead.
func (*ComicList) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{5}
}

func (x *ComicList) GetComics() []*Comic {
	if x != nil {
		return x.Comics
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_comics_comics_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{6}
}

type UpdateComicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateComicRequest) Reset() {
	*x = UpdateComicRequest{}
	mi := &file_comics_comics_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComicRequest) ProtoMessage() {}

func (x *UpdateComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComicRequest.ProtoReflect.Descriptor instead.
func (*UpdateComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateComicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateComicRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateComicRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteComicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteComicRequest) Reset() {
	*x = DeleteComicRequest{}
	mi := &file_comics_comics_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteComicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComicRequest) ProtoMessage() {}

func (x *DeleteComicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comics_comics_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComicRequest.ProtoReflect.Descriptor instead.
func (*DeleteComicRequest) Descriptor() ([]byte, []int) {
	return file_comics_comics_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteComicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_comics_comics_proto protoreflect.FileDescriptor

const file_comics_comics_proto_rawDesc = "" +
	"\n" +
	"\x13comics/comics.proto\x12\x06comics\"\x81\x01\n" +
	"\aChapter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06number\x18\x03 \x01(\x05R\x06number\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"\x8b\x01\n" +
	"\x05Comic\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12+\n" +
	"\bchapters\x18\x05 \x03(\v2\x0f.comics.ChapterR\bchapters\"[\n" +
	"\x12CreateComicRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"%\n" +
	"\x13CreateComicResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"%\n" +
	"\x13GetComicByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"2\n" +
	"\tComicList\x12%\n" +
	"\x06comics\x18\x01 \x03(\v2\r.comics.ComicR\x06comics\"\a\n" +
	"\x05Empty\"R\n" +
	"\x12UpdateComicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"$\n" +
	"\x12DeleteComicRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2\xb7\x02\n" +
	"\rComicsService\x12F\n" +
	"\vCreateComic\x12\x1a.comics.CreateComicRequest\x1a\x1b.comics.CreateComicResponse\x12:\n" +
	"\fGetComicByID\x12\x1b.comics.GetComicByIDRequest\x1a\r.comics.Comic\x12.\n" +
	"\n" +
	"ListComics\x12\r.comics.Empty\x1a\x11.comics.ComicList\x128\n" +
	"\vUpdateComic\x12\x1a.comics.UpdateComicRequest\x1a\r.comics.Empty\x128\n" +
	"\vDeleteComic\x12\x1a.comics.DeleteComicRequest\x1a\r.comics.EmptyB\x1cZ\x1alikoscp.comics.v1;comicsv1b\x06proto3"

var (
	file_comics_comics_proto_rawDescOnce sync.Once
	file_comics_comics_proto_rawDescData []byte
)

func file_comics_comics_proto_rawDescGZIP() []byte {
	file_comics_comics_proto_rawDescOnce.Do(func() {
		file_comics_comics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comics_comics_proto_rawDesc), len(file_comics_comics_proto_rawDesc)))
	})
	return file_comics_comics_proto_rawDescData
}

var file_comics_comics_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_comics_comics_proto_goTypes = []any{
	(*Chapter)(nil),             // 0: comics.Chapter
	(*Comic)(nil),               // 1: comics.Comic
	(*CreateComicRequest)(nil),  // 2: comics.CreateComicRequest
	(*CreateComicResponse)(nil), // 3: comics.CreateComicResponse
	(*GetComicByIDRequest)(nil), // 4: comics.GetComicByIDRequest
	(*ComicList)(nil),           // 5: comics.ComicList
	(*Empty)(nil),               // 6: comics.Empty
	(*UpdateComicRequest)(nil),  // 7: comics.UpdateComicRequest
	(*DeleteComicRequest)(nil),  // 8: comics.DeleteComicRequest
}
var file_comics_comics_proto_depIdxs = []int32{
	0, // 0: comics.Comic.chapters:type_name -> comics.Chapter
	1, // 1: comics.ComicList.comics:type_name -> comics.Comic
	2, // 2: comics.ComicsService.CreateComic:input_type -> comics.CreateComicRequest
	4, // 3: comics.ComicsService.GetComicByID:input_type -> comics.GetComicByIDRequest
	6, // 4: comics.ComicsService.ListComics:input_type -> comics.Empty
	7, // 5: comics.ComicsService.UpdateComic:input_type -> comics.UpdateComicRequest
	8, // 6: comics.ComicsService.DeleteComic:input_type -> comics.DeleteComicRequest
	3, // 7: comics.ComicsService.CreateComic:output_type -> comics.CreateComicResponse
	1, // 8: comics.ComicsService.GetComicByID:output_type -> comics.Comic
	5, // 9: comics.ComicsService.ListComics:output_type -> comics.ComicList
	6, // 10: comics.ComicsService.UpdateComic:output_type -> comics.Empty
	6, // 11: comics.ComicsService.DeleteComic:output_type -> comics.Empty
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_comics_comics_proto_init() }
func file_comics_comics_proto_init() {
	if File_comics_comics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comics_comics_proto_rawDesc), len(file_comics_comics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comics_comics_proto_goTypes,
		DependencyIndexes: file_comics_comics_proto_depIdxs,
		MessageInfos:      file_comics_comics_proto_msgTypes,
	}.Build()
	File_comics_comics_proto = out.File
	file_comics_comics_proto_goTypes = nil
	file_comics_comics_proto_depIdxs = nil
}
