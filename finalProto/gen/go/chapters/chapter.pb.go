// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: chapters/chapter.proto

package chaptersv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Page struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Page) Reset() {
	*x = Page{}
	mi := &file_chapters_chapter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{0}
}

func (x *Page) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Page) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Page) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type Chapter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Number        int32                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Likes         int32                  `protobuf:"varint,4,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes      int32                  `protobuf:"varint,5,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Pages         []*Page                `protobuf:"bytes,7,rep,name=pages,proto3" json:"pages,omitempty"`
	ComicId       string                 `protobuf:"bytes,8,opt,name=comic_id,json=comicId,proto3" json:"comic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	mi := &file_chapters_chapter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{1}
}

func (x *Chapter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chapter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chapter) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Chapter) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *Chapter) GetDislikes() int32 {
	if x != nil {
		return x.Dislikes
	}
	return 0
}

func (x *Chapter) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Chapter) GetPages() []*Page {
	if x != nil {
		return x.Pages
	}
	return nil
}

func (x *Chapter) GetComicId() string {
	if x != nil {
		return x.ComicId
	}
	return ""
}

type CreateChapterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Likes         int32                  `protobuf:"varint,3,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes      int32                  `protobuf:"varint,4,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
	ComicId       uint32                 `protobuf:"varint,5,opt,name=comic_id,json=comicId,proto3" json:"comic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChapterRequest) Reset() {
	*x = CreateChapterRequest{}
	mi := &file_chapters_chapter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChapterRequest) ProtoMessage() {}

func (x *CreateChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChapterRequest.ProtoReflect.Descriptor instead.
func (*CreateChapterRequest) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{2}
}

func (x *CreateChapterRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateChapterRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreateChapterRequest) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *CreateChapterRequest) GetDislikes() int32 {
	if x != nil {
		return x.Dislikes
	}
	return 0
}

func (x *CreateChapterRequest) GetComicId() uint32 {
	if x != nil {
		return x.ComicId
	}
	return 0
}

type CreateChapterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChapterResponse) Reset() {
	*x = CreateChapterResponse{}
	mi := &file_chapters_chapter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChapterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChapterResponse) ProtoMessage() {}

func (x *CreateChapterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChapterResponse.ProtoReflect.Descriptor instead.
func (*CreateChapterResponse) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChapterResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChapterByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChapterByIDRequest) Reset() {
	*x = GetChapterByIDRequest{}
	mi := &file_chapters_chapter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChapterByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChapterByIDRequest) ProtoMessage() {}

func (x *GetChapterByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChapterByIDRequest.ProtoReflect.Descriptor instead.
func (*GetChapterByIDRequest) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{4}
}

func (x *GetChapterByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ChapterList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chapters      []*Chapter             `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChapterList) Reset() {
	*x = ChapterList{}
	mi := &file_chapters_chapter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChapterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterList) ProtoMessage() {}

func (x *ChapterList) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterList.ProtoReflect.Descriptor instead.
func (*ChapterList) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{5}
}

func (x *ChapterList) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type UpdateChapterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Number        int32                  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Likes         int32                  `protobuf:"varint,4,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes      int32                  `protobuf:"varint,5,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
	ComicId       uint32                 `protobuf:"varint,6,opt,name=comic_id,json=comicId,proto3" json:"comic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChapterRequest) Reset() {
	*x = UpdateChapterRequest{}
	mi := &file_chapters_chapter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChapterRequest) ProtoMessage() {}

func (x *UpdateChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChapterRequest.ProtoReflect.Descriptor instead.
func (*UpdateChapterRequest) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateChapterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateChapterRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateChapterRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *UpdateChapterRequest) GetLikes() int32 {
	if x != nil {
		return x.Likes
	}
	return 0
}

func (x *UpdateChapterRequest) GetDislikes() int32 {
	if x != nil {
		return x.Dislikes
	}
	return 0
}

func (x *UpdateChapterRequest) GetComicId() uint32 {
	if x != nil {
		return x.ComicId
	}
	return 0
}

type DeleteChapterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChapterRequest) Reset() {
	*x = DeleteChapterRequest{}
	mi := &file_chapters_chapter_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChapterRequest) ProtoMessage() {}

func (x *DeleteChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChapterRequest.ProtoReflect.Descriptor instead.
func (*DeleteChapterRequest) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteChapterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddPageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChapterId     string                 `protobuf:"bytes,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PageNum       int32                  `protobuf:"varint,3,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPageRequest) Reset() {
	*x = AddPageRequest{}
	mi := &file_chapters_chapter_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPageRequest) ProtoMessage() {}

func (x *AddPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPageRequest.ProtoReflect.Descriptor instead.
func (*AddPageRequest) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{8}
}

func (x *AddPageRequest) GetChapterId() string {
	if x != nil {
		return x.ChapterId
	}
	return ""
}

func (x *AddPageRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *AddPageRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type AddPageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPageResponse) Reset() {
	*x = AddPageResponse{}
	mi := &file_chapters_chapter_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPageResponse) ProtoMessage() {}

func (x *AddPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPageResponse.ProtoReflect.Descriptor instead.
func (*AddPageResponse) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{9}
}

func (x *AddPageResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_chapters_chapter_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_chapters_chapter_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_chapters_chapter_proto_rawDescGZIP(), []int{10}
}

var File_chapters_chapter_proto protoreflect.FileDescriptor

const file_chapters_chapter_proto_rawDesc = "" +
	"\n" +
	"\x16chapters/chapter.proto\x12\bchapters\"N\n" +
	"\x04Page\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\timage_url\x18\x02 \x01(\tR\bimageUrl\x12\x19\n" +
	"\bpage_num\x18\x03 \x01(\x05R\apageNum\"\xd9\x01\n" +
	"\aChapter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06number\x18\x03 \x01(\x05R\x06number\x12\x14\n" +
	"\x05likes\x18\x04 \x01(\x05R\x05likes\x12\x1a\n" +
	"\bdislikes\x18\x05 \x01(\x05R\bdislikes\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12$\n" +
	"\x05pages\x18\a \x03(\v2\x0e.chapters.PageR\x05pages\x12\x19\n" +
	"\bcomic_id\x18\b \x01(\tR\acomicId\"\x91\x01\n" +
	"\x14CreateChapterRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\x12\x14\n" +
	"\x05likes\x18\x03 \x01(\x05R\x05likes\x12\x1a\n" +
	"\bdislikes\x18\x04 \x01(\x05R\bdislikes\x12\x19\n" +
	"\bcomic_id\x18\x05 \x01(\rR\acomicId\"'\n" +
	"\x15CreateChapterResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"'\n" +
	"\x15GetChapterByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\vChapterList\x12-\n" +
	"\bchapters\x18\x01 \x03(\v2\x11.chapters.ChapterR\bchapters\"\xa1\x01\n" +
	"\x14UpdateChapterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06number\x18\x03 \x01(\x05R\x06number\x12\x14\n" +
	"\x05likes\x18\x04 \x01(\x05R\x05likes\x12\x1a\n" +
	"\bdislikes\x18\x05 \x01(\x05R\bdislikes\x12\x19\n" +
	"\bcomic_id\x18\x06 \x01(\rR\acomicId\"&\n" +
	"\x14DeleteChapterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"g\n" +
	"\x0eAddPageRequest\x12\x1d\n" +
	"\n" +
	"chapter_id\x18\x01 \x01(\tR\tchapterId\x12\x1b\n" +
	"\timage_url\x18\x02 \x01(\tR\bimageUrl\x12\x19\n" +
	"\bpage_num\x18\x03 \x01(\x05R\apageNum\"!\n" +
	"\x0fAddPageResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\a\n" +
	"\x05Empty2\xa5\x03\n" +
	"\x0fChaptersService\x12P\n" +
	"\rCreateChapter\x12\x1e.chapters.CreateChapterRequest\x1a\x1f.chapters.CreateChapterResponse\x12D\n" +
	"\x0eGetChapterByID\x12\x1f.chapters.GetChapterByIDRequest\x1a\x11.chapters.Chapter\x126\n" +
	"\fListChapters\x12\x0f.chapters.Empty\x1a\x15.chapters.ChapterList\x12@\n" +
	"\rUpdateChapter\x12\x1e.chapters.UpdateChapterRequest\x1a\x0f.chapters.Empty\x12@\n" +
	"\rDeleteChapter\x12\x1e.chapters.DeleteChapterRequest\x1a\x0f.chapters.Empty\x12>\n" +
	"\aAddPage\x12\x18.chapters.AddPageRequest\x1a\x19.chapters.AddPageResponseB Z\x1elikoscp.chapters.v1;chaptersv1b\x06proto3"

var (
	file_chapters_chapter_proto_rawDescOnce sync.Once
	file_chapters_chapter_proto_rawDescData []byte
)

func file_chapters_chapter_proto_rawDescGZIP() []byte {
	file_chapters_chapter_proto_rawDescOnce.Do(func() {
		file_chapters_chapter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chapters_chapter_proto_rawDesc), len(file_chapters_chapter_proto_rawDesc)))
	})
	return file_chapters_chapter_proto_rawDescData
}

var file_chapters_chapter_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_chapters_chapter_proto_goTypes = []any{
	(*Page)(nil),                  // 0: chapters.Page
	(*Chapter)(nil),               // 1: chapters.Chapter
	(*CreateChapterRequest)(nil),  // 2: chapters.CreateChapterRequest
	(*CreateChapterResponse)(nil), // 3: chapters.CreateChapterResponse
	(*GetChapterByIDRequest)(nil), // 4: chapters.GetChapterByIDRequest
	(*ChapterList)(nil),           // 5: chapters.ChapterList
	(*UpdateChapterRequest)(nil),  // 6: chapters.UpdateChapterRequest
	(*DeleteChapterRequest)(nil),  // 7: chapters.DeleteChapterRequest
	(*AddPageRequest)(nil),        // 8: chapters.AddPageRequest
	(*AddPageResponse)(nil),       // 9: chapters.AddPageResponse
	(*Empty)(nil),                 // 10: chapters.Empty
}
var file_chapters_chapter_proto_depIdxs = []int32{
	0,  // 0: chapters.Chapter.pages:type_name -> chapters.Page
	1,  // 1: chapters.ChapterList.chapters:type_name -> chapters.Chapter
	2,  // 2: chapters.ChaptersService.CreateChapter:input_type -> chapters.CreateChapterRequest
	4,  // 3: chapters.ChaptersService.GetChapterByID:input_type -> chapters.GetChapterByIDRequest
	10, // 4: chapters.ChaptersService.ListChapters:input_type -> chapters.Empty
	6,  // 5: chapters.ChaptersService.UpdateChapter:input_type -> chapters.UpdateChapterRequest
	7,  // 6: chapters.ChaptersService.DeleteChapter:input_type -> chapters.DeleteChapterRequest
	8,  // 7: chapters.ChaptersService.AddPage:input_type -> chapters.AddPageRequest
	3,  // 8: chapters.ChaptersService.CreateChapter:output_type -> chapters.CreateChapterResponse
	1,  // 9: chapters.ChaptersService.GetChapterByID:output_type -> chapters.Chapter
	5,  // 10: chapters.ChaptersService.ListChapters:output_type -> chapters.ChapterList
	10, // 11: chapters.ChaptersService.UpdateChapter:output_type -> chapters.Empty
	10, // 12: chapters.ChaptersService.DeleteChapter:output_type -> chapters.Empty
	9,  // 13: chapters.ChaptersService.AddPage:output_type -> chapters.AddPageResponse
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_chapters_chapter_proto_init() }
func file_chapters_chapter_proto_init() {
	if File_chapters_chapter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chapters_chapter_proto_rawDesc), len(file_chapters_chapter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chapters_chapter_proto_goTypes,
		DependencyIndexes: file_chapters_chapter_proto_depIdxs,
		MessageInfos:      file_chapters_chapter_proto_msgTypes,
	}.Build()
	File_chapters_chapter_proto = out.File
	file_chapters_chapter_proto_goTypes = nil
	file_chapters_chapter_proto_depIdxs = nil
}
